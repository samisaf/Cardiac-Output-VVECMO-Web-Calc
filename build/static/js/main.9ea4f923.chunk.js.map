{"version":3,"sources":["Components/Input.js","Components/Show.js","App.js","index.js"],"names":["label","placeholder","onChange","className","type","e","Number","target","value","showText","isFinite","toString","name","Math","sqrt","round","n","d","React","useState","height","setHeight","weight","setWeight","sbp","setSbp","dbp","setDbp","rap","setRap","O2Art","setO2Art","FlowECMO","setFlowECMO","O2ECMO","setO2ECMO","O2Venous","setO2Venous","cardiacOutput","venousFlow","map","svr","bsa","cardiacIndex","Input","Show","ReactDOM","render","App","document","getElementById"],"mappings":"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","file":"static/js/main.9ea4f923.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nexport default function({ label, placeholder, onChange }) {\r\n  const row = \"flex m-2\";\r\n  const colLabel = \"w-2/3\";\r\n  const colInput = \"w-1/3 text-center\";\r\n\r\n  \r\n  return (\r\n    <div className={row}>\r\n      <label className={colLabel}>{label}</label>\r\n      <input\r\n        className={colInput}\r\n        placeholder={placeholder}\r\n        type=\"number\"\r\n        onChange={e => onChange(Number(e.target.value))}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function({ label, value }) {\r\n  const row = \"flex m-2\";\r\n  const lstyle = \"w-2/3\";\r\n  const vstyle = \"w-1/3 text-center\";\r\n\r\n  const showText = isFinite(value) & (value > 0) ? value.toString() : \"\";\r\n\r\n  return (\r\n    <div className={row}>\r\n      <p className={lstyle}>{label}</p>\r\n      <p className={vstyle}>{showText}</p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport Switch from \"./Components/Switch\";\r\nimport Input from \"./Components/Input\";\r\nimport Show from \"./Components/Show\";\r\n\r\nexport default function({ name }) {\r\n  //helper functions\r\n  const sqrt = Math.sqrt;\r\n  const round = (n, d = 0) => Math.round(n * 10 ** d) / 10 ** d;\r\n  const [height, setHeight] = React.useState(0.0);\r\n  const [weight, setWeight] = React.useState(0.0);\r\n  const [sbp, setSbp] = React.useState(0.0);\r\n  const [dbp, setDbp] = React.useState(0.0);\r\n  const [rap, setRap] = React.useState(5.0);\r\n  const [O2Art, setO2Art] = React.useState(0.0);\r\n  const [FlowECMO, setFlowECMO] = React.useState(0.0);\r\n  const [O2ECMO, setO2ECMO] = React.useState(0.0);\r\n  const [O2Venous, setO2Venous] = React.useState(0.0);\r\n\r\n  const cardiacOutput = Math.round(\r\n    ((FlowECMO * (O2ECMO - O2Venous)) / (O2Art - O2Venous)) * 1000\r\n  );\r\n\r\n  const venousFlow =\r\n    ((FlowECMO * (O2ECMO - O2Art)) / (O2Art - O2Venous)) * 1000;\r\n\r\n  \r\n\r\n  const map = sbp / 3 + (2 * dbp) / 3;\r\n  const svr = (1000 * 80 * (map - rap)) / cardiacOutput;\r\n  const bsa = 0.007184 * weight**.425* height**.725;\r\n\r\n  const cardiacIndex = cardiacOutput / bsa;\r\n\r\n  const card = \"max-w-sm rounded shadow-lg bg-gray-300 p-2 m-2\";\r\n  const title = \"font-bold\";\r\n  const row = \"flex m-2\";\r\n  const colLabel = \"w-2/3\";\r\n  const colInput = \"w-1/3 text-center\";\r\n\r\n  return (\r\n    <div className={card}>\r\n      <p className={title}>Cardiac Output in VV ECMO</p>\r\n\r\n      <Input label=\"ECMO Flow Rate (L/min)\" onChange={setFlowECMO} />\r\n      <Input label=\"ECMO Arterial O2 Saturation (%)\" onChange={setO2ECMO} />\r\n      <Input label=\"ECMO Venous O2 Saturation (%)\" onChange={setO2Venous} />\r\n      <Input label=\"Arterial O2 Saturation (%)\" onChange={setO2Art} />\r\n\r\n      <Input label=\"SBP (mmHg)\" onChange={setSbp} />\r\n      <Input label=\"DBP (mmHg)\" onChange={setDbp} />\r\n      <Input label=\"RAP (mmHg)\" placeholder={rap} onChange={setRap} />\r\n      <Input label=\"Height (cm)\" onChange={setHeight} />\r\n      <Input label=\"Weight (kg)\" onChange={setWeight} />\r\n\r\n      <div className={title}>\r\n        <Show label=\"Cardiac Output (mL/min)\" value={round(cardiacOutput)} />\r\n        <Show label=\"Venous Flow (mL/min)\" value={round(venousFlow)} />\r\n        <Show label=\"Cardiac Index (mL/min)\" value={round(cardiacIndex)} />\r\n        <Show label=\"SVR (dynes-sec/cm⁵)\" value={round(svr)} />\r\n        <Show label=\"MAP (mmHG)\" value={round(map)} />\r\n        <Show label=\"BSA - Du Bois (m²)\" value={round(bsa, 2)} />\r\n\r\n      </div>\r\n      <p className=\"text-center text-sm\">\r\n        Information presented here, including use of the calculator, is strictly for educational purposes and should not be used for any other purpose.\r\n      </p>\r\n      <p className=\"text-center text-xs\">\r\n        © Sami Safadi, MD\r\n      </p>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}